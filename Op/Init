-- [Note] Only runs once and loads ALL variables
-- [Note] This file is Cached! Empty Cache and Reload after each edit during testing.

-- Init 
local PTable = CS.ConfigurationMenu.ConfigurationMenuLuaInterface.Instance.parameterTable
local Instance = CS.ConfigurationMenu.ConfigurationMenuLuaInterface.Instance

CS.UnityEngine.Debug.Log('Motion > SubPage0 Init triggered ')
Instance:GetUiElementByName("motion_page"):DoClick()




-- local function string:startswith(start)
    -- return self:sub(1, #start) == start
-- end

local function ToJsonString(jsonStr)
	local index = string.find(jsonStr, ':[^:]*$')
	return string.sub(jsonStr, 1, index-1)
end

-- Verify PTable is setup (using dummy parameter)
PTable:set_Item('Vender', 'Mantis Robotics Inc')
vendor = PTable:get_Item('Vender')
CS.UnityEngine.Debug.Log(vendor)



-- Load All Variables in PTable
for i,d in pairs(Instance.uiPageOnEdit.uiGroups) do
    
	for j,k in pairs(d.uiElements) do
        UiElement=Instance:GetUiElementByName(k.name)   --find UIelement
        UiElementType=UiElement:GetType().Name

		if(UiElement.name ~= nil) then
			ui_name=UiElement.name
		else
			ui_name = "Unkown"
		end
		
		tag_name=UiElementType..'_'..ui_name..'_values'
		
		CS.UnityEngine.Debug.Log('Group Number: '..i.. 
						'\nElement Number: '..j ..
						'\nUiElement Type: '..UiElementType ..
						'\nUiElement Name: '..ui_name ..
						'\nTag Name: ' .. tag_name)
		
		
		-- [Check Box] [Text Display] [Text Input] [Int Input] [Float Input]
        if (UiElementType=='CheckBox') or 
		     (UiElementType=='Text_Display') or 
		       (UiElementType=='Text_Input') or 
		         (UiElementType=='Int_Input') or
				   (UiElementType == "Float_Input") or
				   (UiElementType == "Dropdown") then
			-- Load Values
            if(PTable:ContainsKey(tag_name)) then
                UiElement.value=PTable:get_Item(tag_name)
			end
			
			
		-- [Transform] [Joint] 
		elseif (UiElementType=='Transform') or 
				(UiElementType=='Joint') then
			if(PTable:ContainsKey(tag_name)) then
                load_values=PTable:get_Item(tag_name)
				n=0
                for value in load_values:gmatch('[^,%s]+') do
                    UiElement.value[n]=tonumber(value)
                    n=n+1
                end 
			end
			if(PTable:ContainsKey(tag_name .. '_offsetValues')) then
				load_values = PTable:get_Item(tag_name .. '_offsetValues')
				n = 0
				for offsetValue in load_values:gmatch('[^,%s]+') do
					UiElement.offsetValue[n] = offsetValue
					n = n + 1
				end 
			end


        -- [Project Tool]
        elseif UiElementType=='ProjectTool' then
            if(PTable:ContainsKey(tag_name..'_transform')) then
                -- Load: Transform
				load_values=PTable:get_Item(tag_name..'_transform')  --load value from PTable
                n=0
                for value in load_values:gmatch('[^,%s]+') do
                    UiElement.value.transform[n]=tonumber(value)
                    n=n+1
				end
				
				-- Load: Tool Name
                if PTable:ContainsKey(UiElementType..'_'..k.name..'_values_toolName') then
                    UiElement.value.toolName=PTable:get_Item(tag_name..'_toolName')
                end
				
				-- Load: TCP Number
                if PTable:ContainsKey(UiElementType..'_'..k.name..'_values_tcpNumber') then
                    UiElement.value.tcpNumber=PTable:get_Item(tag_name..'_tcpNumber')
                end
			end	
				
		
		-- [Digital_Input] [Digital_Output]
		elseif (UiElementType == 'Digital_Input') or 
			     (UiElementType == 'Digital_Output') then
			if (PTable:ContainsKey(tag_name)) then
                UiElement:SetValueWithJsonString(ToJsonString(tostring(PTable:get_Item(tag_name))))
            end
			
		
		-- [List]		
		elseif (UiElementType == "List") then
			if(PTable:ContainsKey(tag_name)) then
                UiElement:SetValueWithJsonString(ToJsonString(tostring(PTable:get_Item(tag_name))))
            end

		-- [SubMenuLink]
		elseif (UiElementType == "SubMenuLink") then
			CS.UnityEngine.Debug.Log("Error Not Yet Implemented: " .. UiElementType)
			
		else
			CS.UnityEngine.Debug.Log("Unknow Type: " .. UiElementType)
			error("Unknow Type: " .. UiElementType)
		end
		
        UiElement:RefreshUI()
    end
end
